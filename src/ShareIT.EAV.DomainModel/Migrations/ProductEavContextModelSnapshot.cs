// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShareIT.EAV.DomainModel.DomainContext;

#nullable disable

namespace ShareIT.EAV.DomainModel.Migrations
{
    [DbContext(typeof(ProductEavContext))]
    partial class ProductEavContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShareIT.EAV.DomainModel.Entities.AttributeType", b =>
                {
                    b.Property<long>("AttributeTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AttributeTypeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AttributeTypeId");

                    b.ToTable("AttributeTypes", "EAV");
                });

            modelBuilder.Entity("ShareIT.EAV.DomainModel.Entities.Item", b =>
                {
                    b.Property<long>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ItemId"));

                    b.Property<long>("ProductDefinitionId")
                        .HasColumnType("bigint");

                    b.HasKey("ItemId");

                    b.HasIndex("ProductDefinitionId");

                    b.ToTable("Items", "EAV");
                });

            modelBuilder.Entity("ShareIT.EAV.DomainModel.Entities.ItemBoolValue", b =>
                {
                    b.Property<long>("ItemBoolValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ItemBoolValueId"));

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductAttributeId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductDefinitionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Value")
                        .HasColumnType("bit")
                        .HasColumnName("Value");

                    b.HasKey("ItemBoolValueId");

                    b.HasIndex("ItemId");

                    b.HasIndex("ProductAttributeId");

                    b.HasIndex("ProductDefinitionId");

                    b.ToTable("ItemBoolValues", "EAV");
                });

            modelBuilder.Entity("ShareIT.EAV.DomainModel.Entities.ItemDateTimeValue", b =>
                {
                    b.Property<long>("ItemDateTimeValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ItemDateTimeValueId"));

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductAttributeId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductDefinitionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Value")
                        .HasColumnType("datetime")
                        .HasColumnName("Value");

                    b.HasKey("ItemDateTimeValueId");

                    b.HasIndex("ItemId");

                    b.HasIndex("ProductAttributeId");

                    b.HasIndex("ProductDefinitionId");

                    b.ToTable("ItemDateTimeValues", "EAV");
                });

            modelBuilder.Entity("ShareIT.EAV.DomainModel.Entities.ItemDecimalValue", b =>
                {
                    b.Property<long>("ItemDecimalValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ItemDecimalValueId"));

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductAttributeId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductDefinitionId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Value");

                    b.HasKey("ItemDecimalValueId");

                    b.HasIndex("ItemId");

                    b.HasIndex("ProductAttributeId");

                    b.HasIndex("ProductDefinitionId");

                    b.ToTable("ItemDecimalValues", "EAV");
                });

            modelBuilder.Entity("ShareIT.EAV.DomainModel.Entities.ItemIntValue", b =>
                {
                    b.Property<long>("ItemIntValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ItemIntValueId"));

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductAttributeId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductDefinitionId")
                        .HasColumnType("bigint");

                    b.Property<int>("Value")
                        .HasColumnType("int")
                        .HasColumnName("Value");

                    b.HasKey("ItemIntValueId");

                    b.HasIndex("ItemId");

                    b.HasIndex("ProductAttributeId");

                    b.HasIndex("ProductDefinitionId");

                    b.ToTable("ItemIntValues", "EAV");
                });

            modelBuilder.Entity("ShareIT.EAV.DomainModel.Entities.ItemStringValue", b =>
                {
                    b.Property<long>("ItemStringValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ItemStringValueId"));

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductAttributeId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductDefinitionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Value");

                    b.HasKey("ItemStringValueId");

                    b.HasIndex("ItemId");

                    b.HasIndex("ProductAttributeId");

                    b.HasIndex("ProductDefinitionId");

                    b.ToTable("ItemStringValues", "EAV");
                });

            modelBuilder.Entity("ShareIT.EAV.DomainModel.Entities.ProductAttribute", b =>
                {
                    b.Property<long>("ProductAttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ProductAttributeId"));

                    b.Property<long>("AttributeTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProductDefinitionId")
                        .HasColumnType("bigint");

                    b.HasKey("ProductAttributeId");

                    b.HasIndex("AttributeTypeId");

                    b.HasIndex("ProductDefinitionId");

                    b.ToTable("ProductAttributes", "EAV");
                });

            modelBuilder.Entity("ShareIT.EAV.DomainModel.Entities.ProductDefinition", b =>
                {
                    b.Property<long>("ProductDefinitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ProductDefinitionId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductDefinitionId");

                    b.ToTable("ProductDefinitions", "EAV");
                });

            modelBuilder.Entity("ShareIT.EAV.DomainModel.Entities.Item", b =>
                {
                    b.HasOne("ShareIT.EAV.DomainModel.Entities.ProductDefinition", "ProductDefinition")
                        .WithMany("Items")
                        .HasForeignKey("ProductDefinitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductDefinition");
                });

            modelBuilder.Entity("ShareIT.EAV.DomainModel.Entities.ItemBoolValue", b =>
                {
                    b.HasOne("ShareIT.EAV.DomainModel.Entities.Item", "Item")
                        .WithMany("ItemBoolValues")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShareIT.EAV.DomainModel.Entities.ProductAttribute", "ProductAttribute")
                        .WithMany("ItemBoolValues")
                        .HasForeignKey("ProductAttributeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShareIT.EAV.DomainModel.Entities.ProductDefinition", "ProductDefinition")
                        .WithMany("ItemBoolValues")
                        .HasForeignKey("ProductDefinitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("ProductAttribute");

                    b.Navigation("ProductDefinition");
                });

            modelBuilder.Entity("ShareIT.EAV.DomainModel.Entities.ItemDateTimeValue", b =>
                {
                    b.HasOne("ShareIT.EAV.DomainModel.Entities.Item", "Item")
                        .WithMany("ItemDateTimeValues")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShareIT.EAV.DomainModel.Entities.ProductAttribute", "ProductAttribute")
                        .WithMany("ItemDateTimeValues")
                        .HasForeignKey("ProductAttributeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShareIT.EAV.DomainModel.Entities.ProductDefinition", "ProductDefinition")
                        .WithMany("ItemDateTimeValues")
                        .HasForeignKey("ProductDefinitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("ProductAttribute");

                    b.Navigation("ProductDefinition");
                });

            modelBuilder.Entity("ShareIT.EAV.DomainModel.Entities.ItemDecimalValue", b =>
                {
                    b.HasOne("ShareIT.EAV.DomainModel.Entities.Item", "Item")
                        .WithMany("ItemDecimalValues")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShareIT.EAV.DomainModel.Entities.ProductAttribute", "ProductAttribute")
                        .WithMany("ItemDecimalValues")
                        .HasForeignKey("ProductAttributeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShareIT.EAV.DomainModel.Entities.ProductDefinition", "ProductDefinition")
                        .WithMany("ItemDecimalValues")
                        .HasForeignKey("ProductDefinitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("ProductAttribute");

                    b.Navigation("ProductDefinition");
                });

            modelBuilder.Entity("ShareIT.EAV.DomainModel.Entities.ItemIntValue", b =>
                {
                    b.HasOne("ShareIT.EAV.DomainModel.Entities.Item", "Item")
                        .WithMany("ItemIntValues")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShareIT.EAV.DomainModel.Entities.ProductAttribute", "ProductAttribute")
                        .WithMany("ItemIntValues")
                        .HasForeignKey("ProductAttributeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShareIT.EAV.DomainModel.Entities.ProductDefinition", "ProductDefinition")
                        .WithMany("ItemIntValues")
                        .HasForeignKey("ProductDefinitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("ProductAttribute");

                    b.Navigation("ProductDefinition");
                });

            modelBuilder.Entity("ShareIT.EAV.DomainModel.Entities.ItemStringValue", b =>
                {
                    b.HasOne("ShareIT.EAV.DomainModel.Entities.Item", "Item")
                        .WithMany("ItemStringValues")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShareIT.EAV.DomainModel.Entities.ProductAttribute", "ProductAttribute")
                        .WithMany("ItemStringValues")
                        .HasForeignKey("ProductAttributeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShareIT.EAV.DomainModel.Entities.ProductDefinition", "ProductDefinition")
                        .WithMany("ItemStringValues")
                        .HasForeignKey("ProductDefinitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("ProductAttribute");

                    b.Navigation("ProductDefinition");
                });

            modelBuilder.Entity("ShareIT.EAV.DomainModel.Entities.ProductAttribute", b =>
                {
                    b.HasOne("ShareIT.EAV.DomainModel.Entities.AttributeType", "AttributeType")
                        .WithMany("ProductAttributes")
                        .HasForeignKey("AttributeTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShareIT.EAV.DomainModel.Entities.ProductDefinition", "ProductDefinition")
                        .WithMany("ProductAttributes")
                        .HasForeignKey("ProductDefinitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AttributeType");

                    b.Navigation("ProductDefinition");
                });

            modelBuilder.Entity("ShareIT.EAV.DomainModel.Entities.AttributeType", b =>
                {
                    b.Navigation("ProductAttributes");
                });

            modelBuilder.Entity("ShareIT.EAV.DomainModel.Entities.Item", b =>
                {
                    b.Navigation("ItemBoolValues");

                    b.Navigation("ItemDateTimeValues");

                    b.Navigation("ItemDecimalValues");

                    b.Navigation("ItemIntValues");

                    b.Navigation("ItemStringValues");
                });

            modelBuilder.Entity("ShareIT.EAV.DomainModel.Entities.ProductAttribute", b =>
                {
                    b.Navigation("ItemBoolValues");

                    b.Navigation("ItemDateTimeValues");

                    b.Navigation("ItemDecimalValues");

                    b.Navigation("ItemIntValues");

                    b.Navigation("ItemStringValues");
                });

            modelBuilder.Entity("ShareIT.EAV.DomainModel.Entities.ProductDefinition", b =>
                {
                    b.Navigation("ItemBoolValues");

                    b.Navigation("ItemDateTimeValues");

                    b.Navigation("ItemDecimalValues");

                    b.Navigation("ItemIntValues");

                    b.Navigation("ItemStringValues");

                    b.Navigation("Items");

                    b.Navigation("ProductAttributes");
                });
#pragma warning restore 612, 618
        }
    }
}
